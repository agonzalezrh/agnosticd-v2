---
- name: Step 001.1 Deploy Infrastructure
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  module_defaults:
    group/k8s:
      host: "{{ sandbox_openshift_api_url }}"
      validate_certs: false
  tasks:
  - name: Provide sandbox provision data
    when:
      - openshift_cnv_set_sandbox_provision_data | default(false) | bool
    agnosticd.core.agnosticd_user_info:
      data:
        sandbox_openshift_namespace: "{{ sandbox_openshift_namespace }}"
        sandbox_openshift_cluster: "{{ sandbox_openshift_cluster }}"
        sandbox_openshift_api_url: "{{ sandbox_openshift_api_url }}"
        sandbox_openshift_apps_domain: "{{ sandbox_openshift_apps_domain }}"
        sandbox_openshift_console_url: "{{ sandbox_openshift_console_url }}"
        sandbox_openshift_api_key: "{{ sandbox_openshift_api_key}}"

  - name: Create ssh provision key
    when:
    - instances | default([]) | length > 0
    - ssh_provision_key_name is undefined
    ansible.builtin.include_role:
      name: infra_create_ssh_provision_key

  - name: Run resources role
    vars:
      ACTION: provision
    ansible.builtin.include_role:
      name: agnosticd.cloud_provider_openshift_cnv.resources

- name: Step 001.2 Create Inventory and SSH config setup
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tasks:
  - name: Run infra-dns role
    when: cluster_dns_server is defined or route53_aws_zone_id is defined
    vars:
      _dns_state: present
    ansible.builtin.include_role:
      name: infra_dns

  - name: Run create_inventory role
    ansible.builtin.import_role:
      name: agnosticd.cloud_provider_openshift_cnv.create_inventory

  - name: Run common SSH config generator role
    when: instances | default(false) and 'bastions' in groups
    ansible.builtin.import_role:
      name: infra_common_ssh_config_generate

# include global vars again, this time for all hosts now that the inventory is built
- ansible.builtin.import_playbook: ../../include_vars.yml

- name: Step 001.3 Configure Linux hosts and wait for connection
  hosts:
  - all:!windows:!network
  gather_facts: false
  any_errors_fatal: true
  ignore_errors: false
  become: false
  tasks:
  - name: Set facts for remote access
    ansible.builtin.set_fact:
      ansible_ssh_extra_args: >-
        {{ ansible_ssh_extra_args | default() }}
        -F {{ output_dir }}/{{ config }}_{{ guid }}_ssh_conf

  - name: Run infra_generic_wait_for_linux_hosts role
    ansible.builtin.include_role:
      name: infra_generic_wait_for_linux_hosts
    vars:
      infra_generic_wait_for_linux_hosts_delay: 30
      infra_generic_wait_for_linux_hosts_sleep: 10
      infra_generic_wait_for_linux_hosts_connect_timeout: 20
      infra_generic_wait_for_linux_hosts_timeout: 1200
      infra_generic_wait_for_linux_hosts_retries: 10

  - name: Add authorized_keys
    when: >-
      ssh_authorized_keys | default([]) | length > 0
      or
      all_ssh_authorized_keys | default([]) | length > 0
    ansible.builtin.include_role:
      name: host_ssh_authorized_keys
